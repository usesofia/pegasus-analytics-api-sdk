/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BankAccountsDashboardReportEntityDataBankAccountsInner
 */
export interface BankAccountsDashboardReportEntityDataBankAccountsInner {
    /**
     * ID da conta bancária
     * @type {string}
     * @memberof BankAccountsDashboardReportEntityDataBankAccountsInner
     */
    id: string;
    /**
     * Nome da conta bancária
     * @type {string}
     * @memberof BankAccountsDashboardReportEntityDataBankAccountsInner
     */
    name: string;
    /**
     * Tipo da conta bancária
     * @type {string}
     * @memberof BankAccountsDashboardReportEntityDataBankAccountsInner
     */
    type: string;
    /**
     * Fornecedor da conta bancária
     * @type {string}
     * @memberof BankAccountsDashboardReportEntityDataBankAccountsInner
     */
    provider?: string | null;
    /**
     * Total de registros financeiros
     * @type {number}
     * @memberof BankAccountsDashboardReportEntityDataBankAccountsInner
     */
    recordCount: number;
    /**
     * Total de receitas
     * @type {string}
     * @memberof BankAccountsDashboardReportEntityDataBankAccountsInner
     */
    totalIncome: string;
    /**
     * Total de despesas
     * @type {string}
     * @memberof BankAccountsDashboardReportEntityDataBankAccountsInner
     */
    totalOutcome: string;
    /**
     * Saldo atual da conta bancária
     * @type {string}
     * @memberof BankAccountsDashboardReportEntityDataBankAccountsInner
     */
    balance: string;
}

/**
 * Check if a given object implements the BankAccountsDashboardReportEntityDataBankAccountsInner interface.
 */
export function instanceOfBankAccountsDashboardReportEntityDataBankAccountsInner(value: object): value is BankAccountsDashboardReportEntityDataBankAccountsInner {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('recordCount' in value) || value['recordCount'] === undefined) return false;
    if (!('totalIncome' in value) || value['totalIncome'] === undefined) return false;
    if (!('totalOutcome' in value) || value['totalOutcome'] === undefined) return false;
    if (!('balance' in value) || value['balance'] === undefined) return false;
    return true;
}

export function BankAccountsDashboardReportEntityDataBankAccountsInnerFromJSON(json: any): BankAccountsDashboardReportEntityDataBankAccountsInner {
    return BankAccountsDashboardReportEntityDataBankAccountsInnerFromJSONTyped(json, false);
}

export function BankAccountsDashboardReportEntityDataBankAccountsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): BankAccountsDashboardReportEntityDataBankAccountsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'type': json['type'],
        'provider': json['provider'] == null ? undefined : json['provider'],
        'recordCount': json['recordCount'],
        'totalIncome': json['totalIncome'],
        'totalOutcome': json['totalOutcome'],
        'balance': json['balance'],
    };
}

export function BankAccountsDashboardReportEntityDataBankAccountsInnerToJSON(json: any): BankAccountsDashboardReportEntityDataBankAccountsInner {
    return BankAccountsDashboardReportEntityDataBankAccountsInnerToJSONTyped(json, false);
}

export function BankAccountsDashboardReportEntityDataBankAccountsInnerToJSONTyped(value?: BankAccountsDashboardReportEntityDataBankAccountsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'type': value['type'],
        'provider': value['provider'],
        'recordCount': value['recordCount'],
        'totalIncome': value['totalIncome'],
        'totalOutcome': value['totalOutcome'],
        'balance': value['balance'],
    };
}

