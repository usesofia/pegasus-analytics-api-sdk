/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MonthlyFinancialReportEntityDataFilters } from './MonthlyFinancialReportEntityDataFilters';
import {
    MonthlyFinancialReportEntityDataFiltersFromJSON,
    MonthlyFinancialReportEntityDataFiltersFromJSONTyped,
    MonthlyFinancialReportEntityDataFiltersToJSON,
    MonthlyFinancialReportEntityDataFiltersToJSONTyped,
} from './MonthlyFinancialReportEntityDataFilters';
import type { FinancialResultCompositionReportEntityDataDataInner } from './FinancialResultCompositionReportEntityDataDataInner';
import {
    FinancialResultCompositionReportEntityDataDataInnerFromJSON,
    FinancialResultCompositionReportEntityDataDataInnerFromJSONTyped,
    FinancialResultCompositionReportEntityDataDataInnerToJSON,
    FinancialResultCompositionReportEntityDataDataInnerToJSONTyped,
} from './FinancialResultCompositionReportEntityDataDataInner';

/**
 * 
 * @export
 * @interface FinancialResultCompositionReportEntityData
 */
export interface FinancialResultCompositionReportEntityData {
    /**
     * Composição do resultado financeiro
     * @type {Array<FinancialResultCompositionReportEntityDataDataInner>}
     * @memberof FinancialResultCompositionReportEntityData
     */
    data: Array<FinancialResultCompositionReportEntityDataDataInner>;
    /**
     * Receita operacional total em formato string
     * @type {string}
     * @memberof FinancialResultCompositionReportEntityData
     */
    totalRevenue: string;
    /**
     * 
     * @type {MonthlyFinancialReportEntityDataFilters}
     * @memberof FinancialResultCompositionReportEntityData
     */
    filters: MonthlyFinancialReportEntityDataFilters;
}

/**
 * Check if a given object implements the FinancialResultCompositionReportEntityData interface.
 */
export function instanceOfFinancialResultCompositionReportEntityData(value: object): value is FinancialResultCompositionReportEntityData {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('totalRevenue' in value) || value['totalRevenue'] === undefined) return false;
    if (!('filters' in value) || value['filters'] === undefined) return false;
    return true;
}

export function FinancialResultCompositionReportEntityDataFromJSON(json: any): FinancialResultCompositionReportEntityData {
    return FinancialResultCompositionReportEntityDataFromJSONTyped(json, false);
}

export function FinancialResultCompositionReportEntityDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): FinancialResultCompositionReportEntityData {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(FinancialResultCompositionReportEntityDataDataInnerFromJSON)),
        'totalRevenue': json['totalRevenue'],
        'filters': MonthlyFinancialReportEntityDataFiltersFromJSON(json['filters']),
    };
}

export function FinancialResultCompositionReportEntityDataToJSON(json: any): FinancialResultCompositionReportEntityData {
    return FinancialResultCompositionReportEntityDataToJSONTyped(json, false);
}

export function FinancialResultCompositionReportEntityDataToJSONTyped(value?: FinancialResultCompositionReportEntityData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(FinancialResultCompositionReportEntityDataDataInnerToJSON)),
        'totalRevenue': value['totalRevenue'],
        'filters': MonthlyFinancialReportEntityDataFiltersToJSON(value['filters']),
    };
}

