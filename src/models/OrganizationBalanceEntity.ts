/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrganizationBalanceEntityHistoryInner } from './OrganizationBalanceEntityHistoryInner';
import {
    OrganizationBalanceEntityHistoryInnerFromJSON,
    OrganizationBalanceEntityHistoryInnerFromJSONTyped,
    OrganizationBalanceEntityHistoryInnerToJSON,
    OrganizationBalanceEntityHistoryInnerToJSONTyped,
} from './OrganizationBalanceEntityHistoryInner';

/**
 * 
 * @export
 * @interface OrganizationBalanceEntity
 */
export interface OrganizationBalanceEntity {
    /**
     * Nome da conta
     * @type {string}
     * @memberof OrganizationBalanceEntity
     */
    accountName: string;
    /**
     * Tipo de conta
     * @type {string}
     * @memberof OrganizationBalanceEntity
     */
    accountType: string;
    /**
     * URL da imagem da conta
     * @type {string}
     * @memberof OrganizationBalanceEntity
     */
    accountImageUrl?: string | null;
    /**
     * Tipo de conexão da conta
     * @type {string}
     * @memberof OrganizationBalanceEntity
     */
    connectionType?: string | null;
    /**
     * Saldo atual da conta
     * @type {string}
     * @memberof OrganizationBalanceEntity
     */
    currentBalance: string;
    /**
     * 
     * @type {Array<OrganizationBalanceEntityHistoryInner>}
     * @memberof OrganizationBalanceEntity
     */
    history: Array<OrganizationBalanceEntityHistoryInner>;
}

/**
 * Check if a given object implements the OrganizationBalanceEntity interface.
 */
export function instanceOfOrganizationBalanceEntity(value: object): value is OrganizationBalanceEntity {
    if (!('accountName' in value) || value['accountName'] === undefined) return false;
    if (!('accountType' in value) || value['accountType'] === undefined) return false;
    if (!('currentBalance' in value) || value['currentBalance'] === undefined) return false;
    if (!('history' in value) || value['history'] === undefined) return false;
    return true;
}

export function OrganizationBalanceEntityFromJSON(json: any): OrganizationBalanceEntity {
    return OrganizationBalanceEntityFromJSONTyped(json, false);
}

export function OrganizationBalanceEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationBalanceEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'accountName': json['accountName'],
        'accountType': json['accountType'],
        'accountImageUrl': json['accountImageUrl'] == null ? undefined : json['accountImageUrl'],
        'connectionType': json['connectionType'] == null ? undefined : json['connectionType'],
        'currentBalance': json['currentBalance'],
        'history': ((json['history'] as Array<any>).map(OrganizationBalanceEntityHistoryInnerFromJSON)),
    };
}

export function OrganizationBalanceEntityToJSON(json: any): OrganizationBalanceEntity {
    return OrganizationBalanceEntityToJSONTyped(json, false);
}

export function OrganizationBalanceEntityToJSONTyped(value?: OrganizationBalanceEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accountName': value['accountName'],
        'accountType': value['accountType'],
        'accountImageUrl': value['accountImageUrl'],
        'connectionType': value['connectionType'],
        'currentBalance': value['currentBalance'],
        'history': ((value['history'] as Array<any>).map(OrganizationBalanceEntityHistoryInnerToJSON)),
    };
}

