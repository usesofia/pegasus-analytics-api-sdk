/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectedCashFlowEntityPeriodsInnerPeriod } from './ProjectedCashFlowEntityPeriodsInnerPeriod';
import {
    ProjectedCashFlowEntityPeriodsInnerPeriodFromJSON,
    ProjectedCashFlowEntityPeriodsInnerPeriodFromJSONTyped,
    ProjectedCashFlowEntityPeriodsInnerPeriodToJSON,
    ProjectedCashFlowEntityPeriodsInnerPeriodToJSONTyped,
} from './ProjectedCashFlowEntityPeriodsInnerPeriod';

/**
 * 
 * @export
 * @interface ProjectedCashFlowEntityPeriodsInner
 */
export interface ProjectedCashFlowEntityPeriodsInner {
    /**
     * 
     * @type {ProjectedCashFlowEntityPeriodsInnerPeriod}
     * @memberof ProjectedCashFlowEntityPeriodsInner
     */
    period: ProjectedCashFlowEntityPeriodsInnerPeriod;
    /**
     * Saldo inicial do período
     * @type {string}
     * @memberof ProjectedCashFlowEntityPeriodsInner
     */
    openingBalance: string;
    /**
     * Soma de transações de entrada no período
     * @type {string}
     * @memberof ProjectedCashFlowEntityPeriodsInner
     */
    totalIncome: string;
    /**
     * Soma de transações de saída no período
     * @type {string}
     * @memberof ProjectedCashFlowEntityPeriodsInner
     */
    totalOutcome: string;
    /**
     * Saldo final do período
     * @type {string}
     * @memberof ProjectedCashFlowEntityPeriodsInner
     */
    closingBalance: string;
    /**
     * Indica se o período é projetado (futuro) ou histórico
     * @type {boolean}
     * @memberof ProjectedCashFlowEntityPeriodsInner
     */
    isProjected: boolean;
}

/**
 * Check if a given object implements the ProjectedCashFlowEntityPeriodsInner interface.
 */
export function instanceOfProjectedCashFlowEntityPeriodsInner(value: object): value is ProjectedCashFlowEntityPeriodsInner {
    if (!('period' in value) || value['period'] === undefined) return false;
    if (!('openingBalance' in value) || value['openingBalance'] === undefined) return false;
    if (!('totalIncome' in value) || value['totalIncome'] === undefined) return false;
    if (!('totalOutcome' in value) || value['totalOutcome'] === undefined) return false;
    if (!('closingBalance' in value) || value['closingBalance'] === undefined) return false;
    if (!('isProjected' in value) || value['isProjected'] === undefined) return false;
    return true;
}

export function ProjectedCashFlowEntityPeriodsInnerFromJSON(json: any): ProjectedCashFlowEntityPeriodsInner {
    return ProjectedCashFlowEntityPeriodsInnerFromJSONTyped(json, false);
}

export function ProjectedCashFlowEntityPeriodsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectedCashFlowEntityPeriodsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'period': ProjectedCashFlowEntityPeriodsInnerPeriodFromJSON(json['period']),
        'openingBalance': json['openingBalance'],
        'totalIncome': json['totalIncome'],
        'totalOutcome': json['totalOutcome'],
        'closingBalance': json['closingBalance'],
        'isProjected': json['isProjected'],
    };
}

export function ProjectedCashFlowEntityPeriodsInnerToJSON(json: any): ProjectedCashFlowEntityPeriodsInner {
    return ProjectedCashFlowEntityPeriodsInnerToJSONTyped(json, false);
}

export function ProjectedCashFlowEntityPeriodsInnerToJSONTyped(value?: ProjectedCashFlowEntityPeriodsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'period': ProjectedCashFlowEntityPeriodsInnerPeriodToJSON(value['period']),
        'openingBalance': value['openingBalance'],
        'totalIncome': value['totalIncome'],
        'totalOutcome': value['totalOutcome'],
        'closingBalance': value['closingBalance'],
        'isProjected': value['isProjected'],
    };
}

