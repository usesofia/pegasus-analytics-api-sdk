/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.3.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MonthlyFinancialReportEntityDataDataItemsInner } from './MonthlyFinancialReportEntityDataDataItemsInner';
import {
    MonthlyFinancialReportEntityDataDataItemsInnerFromJSON,
    MonthlyFinancialReportEntityDataDataItemsInnerFromJSONTyped,
    MonthlyFinancialReportEntityDataDataItemsInnerToJSON,
    MonthlyFinancialReportEntityDataDataItemsInnerToJSONTyped,
} from './MonthlyFinancialReportEntityDataDataItemsInner';

/**
 * 
 * @export
 * @interface MonthlyFinancialReportEntityDataData
 */
export interface MonthlyFinancialReportEntityDataData {
    /**
     * Dados mensais dos últimos 12 meses
     * @type {Array<MonthlyFinancialReportEntityDataDataItemsInner>}
     * @memberof MonthlyFinancialReportEntityDataData
     */
    items: Array<MonthlyFinancialReportEntityDataDataItemsInner>;
    /**
     * Resultado do período (receitas - despesas) em formato string
     * @type {number}
     * @memberof MonthlyFinancialReportEntityDataData
     */
    periodResult: number;
}

/**
 * Check if a given object implements the MonthlyFinancialReportEntityDataData interface.
 */
export function instanceOfMonthlyFinancialReportEntityDataData(value: object): value is MonthlyFinancialReportEntityDataData {
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('periodResult' in value) || value['periodResult'] === undefined) return false;
    return true;
}

export function MonthlyFinancialReportEntityDataDataFromJSON(json: any): MonthlyFinancialReportEntityDataData {
    return MonthlyFinancialReportEntityDataDataFromJSONTyped(json, false);
}

export function MonthlyFinancialReportEntityDataDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): MonthlyFinancialReportEntityDataData {
    if (json == null) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(MonthlyFinancialReportEntityDataDataItemsInnerFromJSON)),
        'periodResult': json['periodResult'],
    };
}

export function MonthlyFinancialReportEntityDataDataToJSON(json: any): MonthlyFinancialReportEntityDataData {
    return MonthlyFinancialReportEntityDataDataToJSONTyped(json, false);
}

export function MonthlyFinancialReportEntityDataDataToJSONTyped(value?: MonthlyFinancialReportEntityDataData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': ((value['items'] as Array<any>).map(MonthlyFinancialReportEntityDataDataItemsInnerToJSON)),
        'periodResult': value['periodResult'],
    };
}

