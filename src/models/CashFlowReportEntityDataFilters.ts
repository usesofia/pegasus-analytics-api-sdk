/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CashFlowReportEntityDataFiltersPeriod } from './CashFlowReportEntityDataFiltersPeriod';
import {
    CashFlowReportEntityDataFiltersPeriodFromJSON,
    CashFlowReportEntityDataFiltersPeriodFromJSONTyped,
    CashFlowReportEntityDataFiltersPeriodToJSON,
    CashFlowReportEntityDataFiltersPeriodToJSONTyped,
} from './CashFlowReportEntityDataFiltersPeriod';

/**
 * 
 * @export
 * @interface CashFlowReportEntityDataFilters
 */
export interface CashFlowReportEntityDataFilters {
    /**
     * Agrupamento temporal
     * @type {string}
     * @memberof CashFlowReportEntityDataFilters
     */
    grouping: CashFlowReportEntityDataFiltersGroupingEnum;
    /**
     * 
     * @type {CashFlowReportEntityDataFiltersPeriod}
     * @memberof CashFlowReportEntityDataFilters
     */
    period?: CashFlowReportEntityDataFiltersPeriod;
    /**
     * IDs das contas bancárias para filtrar
     * @type {Array<string>}
     * @memberof CashFlowReportEntityDataFilters
     */
    bankAccounts?: Array<string>;
    /**
     * Filtro de status de conciliação
     * @type {Array<boolean>}
     * @memberof CashFlowReportEntityDataFilters
     */
    reconciled?: Array<boolean>;
    /**
     * IDs das tags para filtrar
     * @type {Array<string>}
     * @memberof CashFlowReportEntityDataFilters
     */
    tags?: Array<string>;
}


/**
 * @export
 */
export const CashFlowReportEntityDataFiltersGroupingEnum = {
    Daily: 'daily',
    Monthly: 'monthly',
    Yearly: 'yearly'
} as const;
export type CashFlowReportEntityDataFiltersGroupingEnum = typeof CashFlowReportEntityDataFiltersGroupingEnum[keyof typeof CashFlowReportEntityDataFiltersGroupingEnum];


/**
 * Check if a given object implements the CashFlowReportEntityDataFilters interface.
 */
export function instanceOfCashFlowReportEntityDataFilters(value: object): value is CashFlowReportEntityDataFilters {
    if (!('grouping' in value) || value['grouping'] === undefined) return false;
    return true;
}

export function CashFlowReportEntityDataFiltersFromJSON(json: any): CashFlowReportEntityDataFilters {
    return CashFlowReportEntityDataFiltersFromJSONTyped(json, false);
}

export function CashFlowReportEntityDataFiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashFlowReportEntityDataFilters {
    if (json == null) {
        return json;
    }
    return {
        
        'grouping': json['grouping'],
        'period': json['period'] == null ? undefined : CashFlowReportEntityDataFiltersPeriodFromJSON(json['period']),
        'bankAccounts': json['bankAccounts'] == null ? undefined : json['bankAccounts'],
        'reconciled': json['reconciled'] == null ? undefined : json['reconciled'],
        'tags': json['tags'] == null ? undefined : json['tags'],
    };
}

export function CashFlowReportEntityDataFiltersToJSON(json: any): CashFlowReportEntityDataFilters {
    return CashFlowReportEntityDataFiltersToJSONTyped(json, false);
}

export function CashFlowReportEntityDataFiltersToJSONTyped(value?: CashFlowReportEntityDataFilters | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'grouping': value['grouping'],
        'period': CashFlowReportEntityDataFiltersPeriodToJSON(value['period']),
        'bankAccounts': value['bankAccounts'],
        'reconciled': value['reconciled'],
        'tags': value['tags'],
    };
}

