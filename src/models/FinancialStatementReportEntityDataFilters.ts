/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FinancialStatementReportEntityDataFiltersPeriod } from './FinancialStatementReportEntityDataFiltersPeriod';
import {
    FinancialStatementReportEntityDataFiltersPeriodFromJSON,
    FinancialStatementReportEntityDataFiltersPeriodFromJSONTyped,
    FinancialStatementReportEntityDataFiltersPeriodToJSON,
    FinancialStatementReportEntityDataFiltersPeriodToJSONTyped,
} from './FinancialStatementReportEntityDataFiltersPeriod';

/**
 * 
 * @export
 * @interface FinancialStatementReportEntityDataFilters
 */
export interface FinancialStatementReportEntityDataFilters {
    /**
     * Agrupamento temporal
     * @type {string}
     * @memberof FinancialStatementReportEntityDataFilters
     */
    grouping: FinancialStatementReportEntityDataFiltersGroupingEnum;
    /**
     * 
     * @type {FinancialStatementReportEntityDataFiltersPeriod}
     * @memberof FinancialStatementReportEntityDataFilters
     */
    period?: FinancialStatementReportEntityDataFiltersPeriod;
    /**
     * Campo de data a ser utilizado para filtros
     * @type {string}
     * @memberof FinancialStatementReportEntityDataFilters
     */
    referenceDate: FinancialStatementReportEntityDataFiltersReferenceDateEnum;
    /**
     * Status de conclusão dos lançamentos
     * @type {Array<boolean>}
     * @memberof FinancialStatementReportEntityDataFilters
     */
    completed?: Array<boolean>;
    /**
     * IDs das tags para filtro
     * @type {Array<string>}
     * @memberof FinancialStatementReportEntityDataFilters
     */
    tags?: Array<string>;
}


/**
 * @export
 */
export const FinancialStatementReportEntityDataFiltersGroupingEnum = {
    Daily: 'daily',
    Monthly: 'monthly',
    Yearly: 'yearly'
} as const;
export type FinancialStatementReportEntityDataFiltersGroupingEnum = typeof FinancialStatementReportEntityDataFiltersGroupingEnum[keyof typeof FinancialStatementReportEntityDataFiltersGroupingEnum];

/**
 * @export
 */
export const FinancialStatementReportEntityDataFiltersReferenceDateEnum = {
    DueDate: 'dueDate',
    CashDate: 'cashDate',
    CompetenceDate: 'competenceDate'
} as const;
export type FinancialStatementReportEntityDataFiltersReferenceDateEnum = typeof FinancialStatementReportEntityDataFiltersReferenceDateEnum[keyof typeof FinancialStatementReportEntityDataFiltersReferenceDateEnum];


/**
 * Check if a given object implements the FinancialStatementReportEntityDataFilters interface.
 */
export function instanceOfFinancialStatementReportEntityDataFilters(value: object): value is FinancialStatementReportEntityDataFilters {
    if (!('grouping' in value) || value['grouping'] === undefined) return false;
    if (!('referenceDate' in value) || value['referenceDate'] === undefined) return false;
    return true;
}

export function FinancialStatementReportEntityDataFiltersFromJSON(json: any): FinancialStatementReportEntityDataFilters {
    return FinancialStatementReportEntityDataFiltersFromJSONTyped(json, false);
}

export function FinancialStatementReportEntityDataFiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): FinancialStatementReportEntityDataFilters {
    if (json == null) {
        return json;
    }
    return {
        
        'grouping': json['grouping'],
        'period': json['period'] == null ? undefined : FinancialStatementReportEntityDataFiltersPeriodFromJSON(json['period']),
        'referenceDate': json['referenceDate'],
        'completed': json['completed'] == null ? undefined : json['completed'],
        'tags': json['tags'] == null ? undefined : json['tags'],
    };
}

export function FinancialStatementReportEntityDataFiltersToJSON(json: any): FinancialStatementReportEntityDataFilters {
    return FinancialStatementReportEntityDataFiltersToJSONTyped(json, false);
}

export function FinancialStatementReportEntityDataFiltersToJSONTyped(value?: FinancialStatementReportEntityDataFilters | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'grouping': value['grouping'],
        'period': FinancialStatementReportEntityDataFiltersPeriodToJSON(value['period']),
        'referenceDate': value['referenceDate'],
        'completed': value['completed'],
        'tags': value['tags'],
    };
}

