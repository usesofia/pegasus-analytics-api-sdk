/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CashFlowReportEntityDataSummary
 */
export interface CashFlowReportEntityDataSummary {
    /**
     * Número de períodos no relatório
     * @type {number}
     * @memberof CashFlowReportEntityDataSummary
     */
    totalPeriods: number;
    /**
     * Saldo no início do primeiro período
     * @type {number}
     * @memberof CashFlowReportEntityDataSummary
     */
    overallStartBalance: number;
    /**
     * Saldo no fim do último período
     * @type {number}
     * @memberof CashFlowReportEntityDataSummary
     */
    overallEndBalance: number;
    /**
     * Total de entradas em todos os períodos
     * @type {number}
     * @memberof CashFlowReportEntityDataSummary
     */
    totalIncome: number;
    /**
     * Total de saídas em todos os períodos
     * @type {number}
     * @memberof CashFlowReportEntityDataSummary
     */
    totalOutcome: number;
    /**
     * Fluxo de caixa líquido (total de entradas - total de saídas)
     * @type {number}
     * @memberof CashFlowReportEntityDataSummary
     */
    netCashFlow: number;
}

/**
 * Check if a given object implements the CashFlowReportEntityDataSummary interface.
 */
export function instanceOfCashFlowReportEntityDataSummary(value: object): value is CashFlowReportEntityDataSummary {
    if (!('totalPeriods' in value) || value['totalPeriods'] === undefined) return false;
    if (!('overallStartBalance' in value) || value['overallStartBalance'] === undefined) return false;
    if (!('overallEndBalance' in value) || value['overallEndBalance'] === undefined) return false;
    if (!('totalIncome' in value) || value['totalIncome'] === undefined) return false;
    if (!('totalOutcome' in value) || value['totalOutcome'] === undefined) return false;
    if (!('netCashFlow' in value) || value['netCashFlow'] === undefined) return false;
    return true;
}

export function CashFlowReportEntityDataSummaryFromJSON(json: any): CashFlowReportEntityDataSummary {
    return CashFlowReportEntityDataSummaryFromJSONTyped(json, false);
}

export function CashFlowReportEntityDataSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashFlowReportEntityDataSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'totalPeriods': json['totalPeriods'],
        'overallStartBalance': json['overallStartBalance'],
        'overallEndBalance': json['overallEndBalance'],
        'totalIncome': json['totalIncome'],
        'totalOutcome': json['totalOutcome'],
        'netCashFlow': json['netCashFlow'],
    };
}

export function CashFlowReportEntityDataSummaryToJSON(json: any): CashFlowReportEntityDataSummary {
    return CashFlowReportEntityDataSummaryToJSONTyped(json, false);
}

export function CashFlowReportEntityDataSummaryToJSONTyped(value?: CashFlowReportEntityDataSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'totalPeriods': value['totalPeriods'],
        'overallStartBalance': value['overallStartBalance'],
        'overallEndBalance': value['overallEndBalance'],
        'totalIncome': value['totalIncome'],
        'totalOutcome': value['totalOutcome'],
        'netCashFlow': value['netCashFlow'],
    };
}

