"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.3.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CashFlowReportEntityDataFiltersGroupingEnum = void 0;
exports.instanceOfCashFlowReportEntityDataFilters = instanceOfCashFlowReportEntityDataFilters;
exports.CashFlowReportEntityDataFiltersFromJSON = CashFlowReportEntityDataFiltersFromJSON;
exports.CashFlowReportEntityDataFiltersFromJSONTyped = CashFlowReportEntityDataFiltersFromJSONTyped;
exports.CashFlowReportEntityDataFiltersToJSON = CashFlowReportEntityDataFiltersToJSON;
exports.CashFlowReportEntityDataFiltersToJSONTyped = CashFlowReportEntityDataFiltersToJSONTyped;
var CashFlowReportEntityDataFiltersPeriod_1 = require("./CashFlowReportEntityDataFiltersPeriod");
/**
 * @export
 */
exports.CashFlowReportEntityDataFiltersGroupingEnum = {
    Daily: 'daily',
    Monthly: 'monthly',
    Yearly: 'yearly'
};
/**
 * Check if a given object implements the CashFlowReportEntityDataFilters interface.
 */
function instanceOfCashFlowReportEntityDataFilters(value) {
    if (!('grouping' in value) || value['grouping'] === undefined)
        return false;
    return true;
}
function CashFlowReportEntityDataFiltersFromJSON(json) {
    return CashFlowReportEntityDataFiltersFromJSONTyped(json, false);
}
function CashFlowReportEntityDataFiltersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'grouping': json['grouping'],
        'period': json['period'] == null ? undefined : (0, CashFlowReportEntityDataFiltersPeriod_1.CashFlowReportEntityDataFiltersPeriodFromJSON)(json['period']),
        'bankAccounts': json['bankAccounts'] == null ? undefined : json['bankAccounts'],
        'reconciled': json['reconciled'] == null ? undefined : json['reconciled'],
        'tags': json['tags'] == null ? undefined : json['tags'],
    };
}
function CashFlowReportEntityDataFiltersToJSON(json) {
    return CashFlowReportEntityDataFiltersToJSONTyped(json, false);
}
function CashFlowReportEntityDataFiltersToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'grouping': value['grouping'],
        'period': (0, CashFlowReportEntityDataFiltersPeriod_1.CashFlowReportEntityDataFiltersPeriodToJSON)(value['period']),
        'bankAccounts': value['bankAccounts'],
        'reconciled': value['reconciled'],
        'tags': value['tags'],
    };
}
