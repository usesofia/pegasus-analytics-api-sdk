"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MonthlyFinancialReportEntityDataFiltersAmountTypeEnum = exports.MonthlyFinancialReportEntityDataFiltersDirectionEnum = void 0;
exports.instanceOfMonthlyFinancialReportEntityDataFilters = instanceOfMonthlyFinancialReportEntityDataFilters;
exports.MonthlyFinancialReportEntityDataFiltersFromJSON = MonthlyFinancialReportEntityDataFiltersFromJSON;
exports.MonthlyFinancialReportEntityDataFiltersFromJSONTyped = MonthlyFinancialReportEntityDataFiltersFromJSONTyped;
exports.MonthlyFinancialReportEntityDataFiltersToJSON = MonthlyFinancialReportEntityDataFiltersToJSON;
exports.MonthlyFinancialReportEntityDataFiltersToJSONTyped = MonthlyFinancialReportEntityDataFiltersToJSONTyped;
/**
 * @export
 */
exports.MonthlyFinancialReportEntityDataFiltersDirectionEnum = {
    In: 'IN',
    Out: 'OUT'
};
/**
 * @export
 */
exports.MonthlyFinancialReportEntityDataFiltersAmountTypeEnum = {
    Base: 'base',
    Final: 'final'
};
/**
 * Check if a given object implements the MonthlyFinancialReportEntityDataFilters interface.
 */
function instanceOfMonthlyFinancialReportEntityDataFilters(value) {
    return true;
}
function MonthlyFinancialReportEntityDataFiltersFromJSON(json) {
    return MonthlyFinancialReportEntityDataFiltersFromJSONTyped(json, false);
}
function MonthlyFinancialReportEntityDataFiltersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'direction': json['direction'] == null ? undefined : json['direction'],
        'dueDateFrom': json['dueDateFrom'] == null ? undefined : json['dueDateFrom'],
        'dueDateTo': json['dueDateTo'] == null ? undefined : json['dueDateTo'],
        'contact': json['contact'] == null ? undefined : json['contact'],
        'subcategory': json['subcategory'] == null ? undefined : json['subcategory'],
        'competenceDateFrom': json['competenceDateFrom'] == null ? undefined : json['competenceDateFrom'],
        'competenceDateTo': json['competenceDateTo'] == null ? undefined : json['competenceDateTo'],
        'cashDateFrom': json['cashDateFrom'] == null ? undefined : json['cashDateFrom'],
        'cashDateTo': json['cashDateTo'] == null ? undefined : json['cashDateTo'],
        'createdAtFrom': json['createdAtFrom'] == null ? undefined : json['createdAtFrom'],
        'createdAtTo': json['createdAtTo'] == null ? undefined : json['createdAtTo'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'completed': json['completed'] == null ? undefined : json['completed'],
        'reconciled': json['reconciled'] == null ? undefined : json['reconciled'],
        'account': json['account'] == null ? undefined : json['account'],
        'installmentFinancialRecord': json['installmentFinancialRecord'] == null ? undefined : json['installmentFinancialRecord'],
        'recurringFinancialRecord': json['recurringFinancialRecord'] == null ? undefined : json['recurringFinancialRecord'],
        'amountType': json['amountType'] == null ? undefined : json['amountType'],
    };
}
function MonthlyFinancialReportEntityDataFiltersToJSON(json) {
    return MonthlyFinancialReportEntityDataFiltersToJSONTyped(json, false);
}
function MonthlyFinancialReportEntityDataFiltersToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'direction': value['direction'],
        'dueDateFrom': value['dueDateFrom'],
        'dueDateTo': value['dueDateTo'],
        'contact': value['contact'],
        'subcategory': value['subcategory'],
        'competenceDateFrom': value['competenceDateFrom'],
        'competenceDateTo': value['competenceDateTo'],
        'cashDateFrom': value['cashDateFrom'],
        'cashDateTo': value['cashDateTo'],
        'createdAtFrom': value['createdAtFrom'],
        'createdAtTo': value['createdAtTo'],
        'tags': value['tags'],
        'completed': value['completed'],
        'reconciled': value['reconciled'],
        'account': value['account'],
        'installmentFinancialRecord': value['installmentFinancialRecord'],
        'recurringFinancialRecord': value['recurringFinancialRecord'],
        'amountType': value['amountType'],
    };
}
