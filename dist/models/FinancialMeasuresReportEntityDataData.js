"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfFinancialMeasuresReportEntityDataData = instanceOfFinancialMeasuresReportEntityDataData;
exports.FinancialMeasuresReportEntityDataDataFromJSON = FinancialMeasuresReportEntityDataDataFromJSON;
exports.FinancialMeasuresReportEntityDataDataFromJSONTyped = FinancialMeasuresReportEntityDataDataFromJSONTyped;
exports.FinancialMeasuresReportEntityDataDataToJSON = FinancialMeasuresReportEntityDataDataToJSON;
exports.FinancialMeasuresReportEntityDataDataToJSONTyped = FinancialMeasuresReportEntityDataDataToJSONTyped;
/**
 * Check if a given object implements the FinancialMeasuresReportEntityDataData interface.
 */
function instanceOfFinancialMeasuresReportEntityDataData(value) {
    if (!('contributionMargin' in value) || value['contributionMargin'] === undefined)
        return false;
    if (!('ebitda' in value) || value['ebitda'] === undefined)
        return false;
    if (!('netIncome' in value) || value['netIncome'] === undefined)
        return false;
    if (!('breakEvenPoint' in value) || value['breakEvenPoint'] === undefined)
        return false;
    if (!('averageTicket' in value) || value['averageTicket'] === undefined)
        return false;
    return true;
}
function FinancialMeasuresReportEntityDataDataFromJSON(json) {
    return FinancialMeasuresReportEntityDataDataFromJSONTyped(json, false);
}
function FinancialMeasuresReportEntityDataDataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'contributionMargin': json['contributionMargin'],
        'ebitda': json['ebitda'],
        'netIncome': json['netIncome'],
        'breakEvenPoint': json['breakEvenPoint'],
        'averageTicket': json['averageTicket'],
    };
}
function FinancialMeasuresReportEntityDataDataToJSON(json) {
    return FinancialMeasuresReportEntityDataDataToJSONTyped(json, false);
}
function FinancialMeasuresReportEntityDataDataToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'contributionMargin': value['contributionMargin'],
        'ebitda': value['ebitda'],
        'netIncome': value['netIncome'],
        'breakEvenPoint': value['breakEvenPoint'],
        'averageTicket': value['averageTicket'],
    };
}
