/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CashFlowReportEntityDataDataInnerPeriod } from './CashFlowReportEntityDataDataInnerPeriod';
/**
 *
 * @export
 * @interface FinancialStatementReportEntityDataDataInner
 */
export interface FinancialStatementReportEntityDataDataInner {
    /**
     *
     * @type {CashFlowReportEntityDataDataInnerPeriod}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    period: CashFlowReportEntityDataDataInnerPeriod;
    /**
     * Receita operacional
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    operationalRevenue: number;
    /**
     * Despesas operacionais
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    operatingExpenses: number;
    /**
     * Despesas de vendas e marketing
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    salesAndMarketingExpenses: number;
    /**
     * Margem de contribuição
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    contributionMargin: number;
    /**
     * Percentual da margem de contribuição
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    contributionMarginPercent: number;
    /**
     * Despesas administrativas
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    administrativeExpenses: number;
    /**
     * Despesas de pessoal
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    personnelExpenses: number;
    /**
     * EBITDA
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    ebitda: number;
    /**
     * Percentual do EBITDA
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    ebitdaPercent: number;
    /**
     * Receita financeira
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    financialIncome: number;
    /**
     * Outras receitas
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    otherIncome: number;
    /**
     * Despesas financeiras
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    financialExpenses: number;
    /**
     * Investimentos
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    investments: number;
    /**
     * Despesa com imposto de renda
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    incomeTaxExpense: number;
    /**
     * Lucro líquido
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    netIncome: number;
    /**
     * Percentual do lucro líquido
     * @type {number}
     * @memberof FinancialStatementReportEntityDataDataInner
     */
    netIncomePercent: number;
}
/**
 * Check if a given object implements the FinancialStatementReportEntityDataDataInner interface.
 */
export declare function instanceOfFinancialStatementReportEntityDataDataInner(value: object): value is FinancialStatementReportEntityDataDataInner;
export declare function FinancialStatementReportEntityDataDataInnerFromJSON(json: any): FinancialStatementReportEntityDataDataInner;
export declare function FinancialStatementReportEntityDataDataInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): FinancialStatementReportEntityDataDataInner;
export declare function FinancialStatementReportEntityDataDataInnerToJSON(json: any): FinancialStatementReportEntityDataDataInner;
export declare function FinancialStatementReportEntityDataDataInnerToJSONTyped(value?: FinancialStatementReportEntityDataDataInner | null, ignoreDiscriminator?: boolean): any;
