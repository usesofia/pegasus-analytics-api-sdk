/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Filtros aplicados
 * @export
 * @interface AggregatedFinancialRecordsReportEntityDataFilters
 */
export interface AggregatedFinancialRecordsReportEntityDataFilters {
    /**
     * Campo para agrupamento dos dados
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    groupBy: AggregatedFinancialRecordsReportEntityDataFiltersGroupByEnum;
    /**
     * Ordem de classificação
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    sortOrder?: AggregatedFinancialRecordsReportEntityDataFiltersSortOrderEnum;
    /**
     * Campos para popular
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    populate?: string;
    /**
     * Direção do lançamento financeiro
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    direction: AggregatedFinancialRecordsReportEntityDataFiltersDirectionEnum;
    /**
     * Data de vencimento inicial
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    dueDateFrom: string;
    /**
     * Data de vencimento final
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    dueDateTo: string;
    /**
     * ID do contato
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    contact?: string;
    /**
     * ID da subcategoria
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    subcategory?: string;
    /**
     * Data de competência inicial
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    competenceDateFrom?: string;
    /**
     * Data de competência final
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    competenceDateTo?: string;
    /**
     * Data de pagamento inicial
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    cashDateFrom?: string;
    /**
     * Data de pagamento final
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    cashDateTo?: string;
    /**
     * Data de criação inicial
     * @type {any}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    createdAtFrom?: any | null;
    /**
     * Data de criação final
     * @type {any}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    createdAtTo?: any | null;
    /**
     * IDs das tags separadas por vírgula
     * @type {Array<string>}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    tags?: Array<string>;
    /**
     * Status de conclusão
     * @type {boolean}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    completed?: boolean;
    /**
     * Status de reconciliação
     * @type {boolean}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    reconciled?: boolean;
    /**
     * ID da conta bancária
     * @type {string}
     * @memberof AggregatedFinancialRecordsReportEntityDataFilters
     */
    account?: string;
}
/**
 * @export
 */
export declare const AggregatedFinancialRecordsReportEntityDataFiltersGroupByEnum: {
    readonly Category: "category";
    readonly Contact: "contact";
    readonly Tag: "tag";
};
export type AggregatedFinancialRecordsReportEntityDataFiltersGroupByEnum = typeof AggregatedFinancialRecordsReportEntityDataFiltersGroupByEnum[keyof typeof AggregatedFinancialRecordsReportEntityDataFiltersGroupByEnum];
/**
 * @export
 */
export declare const AggregatedFinancialRecordsReportEntityDataFiltersSortOrderEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type AggregatedFinancialRecordsReportEntityDataFiltersSortOrderEnum = typeof AggregatedFinancialRecordsReportEntityDataFiltersSortOrderEnum[keyof typeof AggregatedFinancialRecordsReportEntityDataFiltersSortOrderEnum];
/**
 * @export
 */
export declare const AggregatedFinancialRecordsReportEntityDataFiltersDirectionEnum: {
    readonly Income: "INCOME";
    readonly Outcome: "OUTCOME";
};
export type AggregatedFinancialRecordsReportEntityDataFiltersDirectionEnum = typeof AggregatedFinancialRecordsReportEntityDataFiltersDirectionEnum[keyof typeof AggregatedFinancialRecordsReportEntityDataFiltersDirectionEnum];
/**
 * Check if a given object implements the AggregatedFinancialRecordsReportEntityDataFilters interface.
 */
export declare function instanceOfAggregatedFinancialRecordsReportEntityDataFilters(value: object): value is AggregatedFinancialRecordsReportEntityDataFilters;
export declare function AggregatedFinancialRecordsReportEntityDataFiltersFromJSON(json: any): AggregatedFinancialRecordsReportEntityDataFilters;
export declare function AggregatedFinancialRecordsReportEntityDataFiltersFromJSONTyped(json: any, ignoreDiscriminator: boolean): AggregatedFinancialRecordsReportEntityDataFilters;
export declare function AggregatedFinancialRecordsReportEntityDataFiltersToJSON(json: any): AggregatedFinancialRecordsReportEntityDataFilters;
export declare function AggregatedFinancialRecordsReportEntityDataFiltersToJSONTyped(value?: AggregatedFinancialRecordsReportEntityDataFilters | null, ignoreDiscriminator?: boolean): any;
