"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfFinancialResultCompositionReportEntityData = instanceOfFinancialResultCompositionReportEntityData;
exports.FinancialResultCompositionReportEntityDataFromJSON = FinancialResultCompositionReportEntityDataFromJSON;
exports.FinancialResultCompositionReportEntityDataFromJSONTyped = FinancialResultCompositionReportEntityDataFromJSONTyped;
exports.FinancialResultCompositionReportEntityDataToJSON = FinancialResultCompositionReportEntityDataToJSON;
exports.FinancialResultCompositionReportEntityDataToJSONTyped = FinancialResultCompositionReportEntityDataToJSONTyped;
var MonthlyFinancialReportEntityDataFilters_1 = require("./MonthlyFinancialReportEntityDataFilters");
var FinancialResultCompositionReportEntityDataDataInner_1 = require("./FinancialResultCompositionReportEntityDataDataInner");
/**
 * Check if a given object implements the FinancialResultCompositionReportEntityData interface.
 */
function instanceOfFinancialResultCompositionReportEntityData(value) {
    if (!('data' in value) || value['data'] === undefined)
        return false;
    if (!('totalRevenue' in value) || value['totalRevenue'] === undefined)
        return false;
    if (!('filters' in value) || value['filters'] === undefined)
        return false;
    return true;
}
function FinancialResultCompositionReportEntityDataFromJSON(json) {
    return FinancialResultCompositionReportEntityDataFromJSONTyped(json, false);
}
function FinancialResultCompositionReportEntityDataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'data': (json['data'].map(FinancialResultCompositionReportEntityDataDataInner_1.FinancialResultCompositionReportEntityDataDataInnerFromJSON)),
        'totalRevenue': json['totalRevenue'],
        'filters': (0, MonthlyFinancialReportEntityDataFilters_1.MonthlyFinancialReportEntityDataFiltersFromJSON)(json['filters']),
    };
}
function FinancialResultCompositionReportEntityDataToJSON(json) {
    return FinancialResultCompositionReportEntityDataToJSONTyped(json, false);
}
function FinancialResultCompositionReportEntityDataToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'data': (value['data'].map(FinancialResultCompositionReportEntityDataDataInner_1.FinancialResultCompositionReportEntityDataDataInnerToJSON)),
        'totalRevenue': value['totalRevenue'],
        'filters': (0, MonthlyFinancialReportEntityDataFilters_1.MonthlyFinancialReportEntityDataFiltersToJSON)(value['filters']),
    };
}
