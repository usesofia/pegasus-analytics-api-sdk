"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FinancialStatementReportEntityDataFiltersReferenceDateEnum = exports.FinancialStatementReportEntityDataFiltersGroupingEnum = void 0;
exports.instanceOfFinancialStatementReportEntityDataFilters = instanceOfFinancialStatementReportEntityDataFilters;
exports.FinancialStatementReportEntityDataFiltersFromJSON = FinancialStatementReportEntityDataFiltersFromJSON;
exports.FinancialStatementReportEntityDataFiltersFromJSONTyped = FinancialStatementReportEntityDataFiltersFromJSONTyped;
exports.FinancialStatementReportEntityDataFiltersToJSON = FinancialStatementReportEntityDataFiltersToJSON;
exports.FinancialStatementReportEntityDataFiltersToJSONTyped = FinancialStatementReportEntityDataFiltersToJSONTyped;
var ProjectedCashFlowEntityPeriodsInnerPeriod_1 = require("./ProjectedCashFlowEntityPeriodsInnerPeriod");
/**
 * @export
 */
exports.FinancialStatementReportEntityDataFiltersGroupingEnum = {
    Daily: 'daily',
    Monthly: 'monthly',
    Yearly: 'yearly'
};
/**
 * @export
 */
exports.FinancialStatementReportEntityDataFiltersReferenceDateEnum = {
    DueDate: 'dueDate',
    CashDate: 'cashDate',
    CompetenceDate: 'competenceDate'
};
/**
 * Check if a given object implements the FinancialStatementReportEntityDataFilters interface.
 */
function instanceOfFinancialStatementReportEntityDataFilters(value) {
    if (!('grouping' in value) || value['grouping'] === undefined)
        return false;
    if (!('referenceDate' in value) || value['referenceDate'] === undefined)
        return false;
    return true;
}
function FinancialStatementReportEntityDataFiltersFromJSON(json) {
    return FinancialStatementReportEntityDataFiltersFromJSONTyped(json, false);
}
function FinancialStatementReportEntityDataFiltersFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'grouping': json['grouping'],
        'period': json['period'] == null ? undefined : (0, ProjectedCashFlowEntityPeriodsInnerPeriod_1.ProjectedCashFlowEntityPeriodsInnerPeriodFromJSON)(json['period']),
        'referenceDate': json['referenceDate'],
        'completed': json['completed'] == null ? undefined : json['completed'],
        'tags': json['tags'] == null ? undefined : json['tags'],
    };
}
function FinancialStatementReportEntityDataFiltersToJSON(json) {
    return FinancialStatementReportEntityDataFiltersToJSONTyped(json, false);
}
function FinancialStatementReportEntityDataFiltersToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'grouping': value['grouping'],
        'period': (0, ProjectedCashFlowEntityPeriodsInnerPeriod_1.ProjectedCashFlowEntityPeriodsInnerPeriodToJSON)(value['period']),
        'referenceDate': value['referenceDate'],
        'completed': value['completed'],
        'tags': value['tags'],
    };
}
