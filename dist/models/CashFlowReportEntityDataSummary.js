"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCashFlowReportEntityDataSummary = instanceOfCashFlowReportEntityDataSummary;
exports.CashFlowReportEntityDataSummaryFromJSON = CashFlowReportEntityDataSummaryFromJSON;
exports.CashFlowReportEntityDataSummaryFromJSONTyped = CashFlowReportEntityDataSummaryFromJSONTyped;
exports.CashFlowReportEntityDataSummaryToJSON = CashFlowReportEntityDataSummaryToJSON;
exports.CashFlowReportEntityDataSummaryToJSONTyped = CashFlowReportEntityDataSummaryToJSONTyped;
/**
 * Check if a given object implements the CashFlowReportEntityDataSummary interface.
 */
function instanceOfCashFlowReportEntityDataSummary(value) {
    if (!('totalPeriods' in value) || value['totalPeriods'] === undefined)
        return false;
    if (!('overallStartBalance' in value) || value['overallStartBalance'] === undefined)
        return false;
    if (!('overallEndBalance' in value) || value['overallEndBalance'] === undefined)
        return false;
    if (!('totalIncome' in value) || value['totalIncome'] === undefined)
        return false;
    if (!('totalOutcome' in value) || value['totalOutcome'] === undefined)
        return false;
    if (!('netCashFlow' in value) || value['netCashFlow'] === undefined)
        return false;
    return true;
}
function CashFlowReportEntityDataSummaryFromJSON(json) {
    return CashFlowReportEntityDataSummaryFromJSONTyped(json, false);
}
function CashFlowReportEntityDataSummaryFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'totalPeriods': json['totalPeriods'],
        'overallStartBalance': json['overallStartBalance'],
        'overallEndBalance': json['overallEndBalance'],
        'totalIncome': json['totalIncome'],
        'totalOutcome': json['totalOutcome'],
        'netCashFlow': json['netCashFlow'],
    };
}
function CashFlowReportEntityDataSummaryToJSON(json) {
    return CashFlowReportEntityDataSummaryToJSONTyped(json, false);
}
function CashFlowReportEntityDataSummaryToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'totalPeriods': value['totalPeriods'],
        'overallStartBalance': value['overallStartBalance'],
        'overallEndBalance': value['overallEndBalance'],
        'totalIncome': value['totalIncome'],
        'totalOutcome': value['totalOutcome'],
        'netCashFlow': value['netCashFlow'],
    };
}
