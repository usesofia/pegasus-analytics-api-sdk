/**
 * Sofia Pegasus analytics-api
 * Api do sistema Pegasus para geração de relatórios e dashboards.
 *
 * The version of the OpenAPI document: 1.3.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AggregatedFinancialRecordsReportEntity, FinancialRecordsAggregatedResultReportEntity, MonthlyFinancialReportEntity } from '../models/index';
export interface GenerateAggregatedFinancialRecordsReportRequest {
    aggregationDirection: GenerateAggregatedFinancialRecordsReportAggregationDirectionEnum;
    groupBy: GenerateAggregatedFinancialRecordsReportGroupByEnum;
    amountType?: GenerateAggregatedFinancialRecordsReportAmountTypeEnum;
    recurringFinancialRecord?: string;
    installmentFinancialRecord?: string;
    account?: string;
    reconciled?: string;
    completed?: string;
    tags?: string;
    createdAtTo?: string;
    createdAtFrom?: string;
    cashDateTo?: string;
    cashDateFrom?: string;
    competenceDateTo?: string;
    competenceDateFrom?: string;
    subcategory?: string;
    contact?: string;
    dueDateTo?: string;
    dueDateFrom?: string;
    direction?: GenerateAggregatedFinancialRecordsReportDirectionEnum;
    sortOrder?: GenerateAggregatedFinancialRecordsReportSortOrderEnum;
}
export interface GenerateMonthlyFinancialReportRequest {
    amountType?: GenerateMonthlyFinancialReportAmountTypeEnum;
    account?: string;
    reconciled?: string;
    completed?: string;
    cashDateTo?: string;
    cashDateFrom?: string;
    competenceDateTo?: string;
    competenceDateFrom?: string;
    subcategory?: string;
    contact?: string;
    dueDateTo?: string;
    dueDateFrom?: string;
    direction?: GenerateMonthlyFinancialReportDirectionEnum;
}
export interface GetAggregatedResultReportRequest {
    amountType?: GetAggregatedResultReportAmountTypeEnum;
    account?: string;
    reconciled?: boolean;
    completed?: boolean;
    tags?: string;
    createdAtTo?: string;
    createdAtFrom?: string;
    cashDateTo?: string;
    cashDateFrom?: string;
    competenceDateTo?: string;
    competenceDateFrom?: string;
    subcategory?: string;
    contact?: string;
    dueDateTo?: string;
    dueDateFrom?: string;
    direction?: GetAggregatedResultReportDirectionEnum;
}
/**
 * FinancialRecordsReportsApi - interface
 *
 * @export
 * @interface FinancialRecordsReportsApiInterface
 */
export interface FinancialRecordsReportsApiInterface {
    /**
     *
     * @summary Gera relatório de lançamentos financeiros agregados por categoria, contato ou tag
     * @param {'IN' | 'OUT'} aggregationDirection Direção do lançamento financeiro
     * @param {'category' | 'contact' | 'tag'} groupBy Campo para agrupamento dos dados
     * @param {'base' | 'final'} [amountType] Tipo de valor a ser utilizado nos cálculos
     * @param {string} [recurringFinancialRecord] ID do lançamento financeiro recorrente
     * @param {string} [installmentFinancialRecord] ID do lançamento financeiro parcelado
     * @param {string} [account] Conta do lançamento financeiro
     * @param {string} [reconciled] Status de conciliação dos lançamentos
     * @param {string} [completed] Status de conclusão dos lançamentos
     * @param {string} [tags] Tags do lançamento financeiro separadas por vírgula
     * @param {string} [createdAtTo] Data de criação final
     * @param {string} [createdAtFrom] Data de criação inicial
     * @param {string} [cashDateTo] Data de caixa final
     * @param {string} [cashDateFrom] Data de caixa inicial
     * @param {string} [competenceDateTo] Data de competência final
     * @param {string} [competenceDateFrom] Data de competência inicial
     * @param {string} [subcategory] Subcategoria do lançamento financeiro
     * @param {string} [contact] Contato do lançamento financeiro
     * @param {string} [dueDateTo] Data de vencimento final
     * @param {string} [dueDateFrom] Data de vencimento inicial
     * @param {'IN' | 'OUT'} [direction] Direção do lançamento financeiro
     * @param {'asc' | 'desc'} [sortOrder] Ordem de classificação
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsReportsApiInterface
     */
    generateAggregatedFinancialRecordsReportRaw(requestParameters: GenerateAggregatedFinancialRecordsReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AggregatedFinancialRecordsReportEntity>>;
    /**
     * Gera relatório de lançamentos financeiros agregados por categoria, contato ou tag
     */
    generateAggregatedFinancialRecordsReport(requestParameters: GenerateAggregatedFinancialRecordsReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AggregatedFinancialRecordsReportEntity>;
    /**
     *
     * @summary Gera relatório financeiro mensal para os últimos 12 meses
     * @param {'base' | 'final'} [amountType] Tipo de valor a ser utilizado nos cálculos. \&quot;base\&quot; para amount, \&quot;final\&quot; para finalAmount. Padrão é \&quot;final\&quot;.
     * @param {string} [account] Conta do lançamento financeiro
     * @param {string} [reconciled] Status de conciliação dos lançamentos
     * @param {string} [completed] Status de conclusão dos lançamentos
     * @param {string} [cashDateTo] Data de pagamento final
     * @param {string} [cashDateFrom] Data de pagamento inicial
     * @param {string} [competenceDateTo] Data de competência final
     * @param {string} [competenceDateFrom] Data de competência inicial
     * @param {string} [subcategory] Subcategoria do lançamento financeiro
     * @param {string} [contact] Contato do lançamento financeiro
     * @param {string} [dueDateTo] Data de vencimento final
     * @param {string} [dueDateFrom] Data de vencimento inicial
     * @param {'IN' | 'OUT'} [direction] Direção do lançamento financeiro
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsReportsApiInterface
     */
    generateMonthlyFinancialReportRaw(requestParameters: GenerateMonthlyFinancialReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MonthlyFinancialReportEntity>>;
    /**
     * Gera relatório financeiro mensal para os últimos 12 meses
     */
    generateMonthlyFinancialReport(requestParameters: GenerateMonthlyFinancialReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MonthlyFinancialReportEntity>;
    /**
     *
     * @summary Get aggregated   result report for financial records
     * @param {'base' | 'final'} [amountType] Tipo de valor a ser utilizado nos cálculos. \&quot;base\&quot; para amount, \&quot;final\&quot; para finalAmount. Padrão é \&quot;final\&quot;.
     * @param {string} [account] Conta do lançamento financeiro.
     * @param {boolean} [reconciled] Indica se o lançamento financeiro foi reconciliado.
     * @param {boolean} [completed] Indica se o lançamento financeiro foi completado.
     * @param {string} [tags] Tags do lançamento financeiro separadas por vírgula.
     * @param {string} [createdAtTo] Data de criação final.
     * @param {string} [createdAtFrom] Data de criação inicial.
     * @param {string} [cashDateTo] Data de pagamento final.
     * @param {string} [cashDateFrom] Data de pagamento inicial.
     * @param {string} [competenceDateTo] Data de competência final.
     * @param {string} [competenceDateFrom] Data de competência inicial.
     * @param {string} [subcategory] Subcategoria do lançamento financeiro.
     * @param {string} [contact] Contato do lançamento financeiro.
     * @param {string} [dueDateTo] Data de vencimento final.
     * @param {string} [dueDateFrom] Data de vencimento inicial.
     * @param {'IN' | 'OUT'} [direction] Direção do lançamento financeiro.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsReportsApiInterface
     */
    getAggregatedResultReportRaw(requestParameters: GetAggregatedResultReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordsAggregatedResultReportEntity>>;
    /**
     * Get aggregated   result report for financial records
     */
    getAggregatedResultReport(requestParameters: GetAggregatedResultReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordsAggregatedResultReportEntity>;
}
/**
 *
 */
export declare class FinancialRecordsReportsApi extends runtime.BaseAPI implements FinancialRecordsReportsApiInterface {
    /**
     * Gera relatório de lançamentos financeiros agregados por categoria, contato ou tag
     */
    generateAggregatedFinancialRecordsReportRaw(requestParameters: GenerateAggregatedFinancialRecordsReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AggregatedFinancialRecordsReportEntity>>;
    /**
     * Gera relatório de lançamentos financeiros agregados por categoria, contato ou tag
     */
    generateAggregatedFinancialRecordsReport(requestParameters: GenerateAggregatedFinancialRecordsReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AggregatedFinancialRecordsReportEntity>;
    /**
     * Gera relatório financeiro mensal para os últimos 12 meses
     */
    generateMonthlyFinancialReportRaw(requestParameters: GenerateMonthlyFinancialReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MonthlyFinancialReportEntity>>;
    /**
     * Gera relatório financeiro mensal para os últimos 12 meses
     */
    generateMonthlyFinancialReport(requestParameters?: GenerateMonthlyFinancialReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MonthlyFinancialReportEntity>;
    /**
     * Get aggregated   result report for financial records
     */
    getAggregatedResultReportRaw(requestParameters: GetAggregatedResultReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordsAggregatedResultReportEntity>>;
    /**
     * Get aggregated   result report for financial records
     */
    getAggregatedResultReport(requestParameters?: GetAggregatedResultReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordsAggregatedResultReportEntity>;
}
/**
 * @export
 */
export declare const GenerateAggregatedFinancialRecordsReportAggregationDirectionEnum: {
    readonly In: "IN";
    readonly Out: "OUT";
};
export type GenerateAggregatedFinancialRecordsReportAggregationDirectionEnum = typeof GenerateAggregatedFinancialRecordsReportAggregationDirectionEnum[keyof typeof GenerateAggregatedFinancialRecordsReportAggregationDirectionEnum];
/**
 * @export
 */
export declare const GenerateAggregatedFinancialRecordsReportGroupByEnum: {
    readonly Category: "category";
    readonly Contact: "contact";
    readonly Tag: "tag";
};
export type GenerateAggregatedFinancialRecordsReportGroupByEnum = typeof GenerateAggregatedFinancialRecordsReportGroupByEnum[keyof typeof GenerateAggregatedFinancialRecordsReportGroupByEnum];
/**
 * @export
 */
export declare const GenerateAggregatedFinancialRecordsReportAmountTypeEnum: {
    readonly Base: "base";
    readonly Final: "final";
};
export type GenerateAggregatedFinancialRecordsReportAmountTypeEnum = typeof GenerateAggregatedFinancialRecordsReportAmountTypeEnum[keyof typeof GenerateAggregatedFinancialRecordsReportAmountTypeEnum];
/**
 * @export
 */
export declare const GenerateAggregatedFinancialRecordsReportDirectionEnum: {
    readonly In: "IN";
    readonly Out: "OUT";
};
export type GenerateAggregatedFinancialRecordsReportDirectionEnum = typeof GenerateAggregatedFinancialRecordsReportDirectionEnum[keyof typeof GenerateAggregatedFinancialRecordsReportDirectionEnum];
/**
 * @export
 */
export declare const GenerateAggregatedFinancialRecordsReportSortOrderEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type GenerateAggregatedFinancialRecordsReportSortOrderEnum = typeof GenerateAggregatedFinancialRecordsReportSortOrderEnum[keyof typeof GenerateAggregatedFinancialRecordsReportSortOrderEnum];
/**
 * @export
 */
export declare const GenerateMonthlyFinancialReportAmountTypeEnum: {
    readonly Base: "base";
    readonly Final: "final";
};
export type GenerateMonthlyFinancialReportAmountTypeEnum = typeof GenerateMonthlyFinancialReportAmountTypeEnum[keyof typeof GenerateMonthlyFinancialReportAmountTypeEnum];
/**
 * @export
 */
export declare const GenerateMonthlyFinancialReportDirectionEnum: {
    readonly In: "IN";
    readonly Out: "OUT";
};
export type GenerateMonthlyFinancialReportDirectionEnum = typeof GenerateMonthlyFinancialReportDirectionEnum[keyof typeof GenerateMonthlyFinancialReportDirectionEnum];
/**
 * @export
 */
export declare const GetAggregatedResultReportAmountTypeEnum: {
    readonly Base: "base";
    readonly Final: "final";
};
export type GetAggregatedResultReportAmountTypeEnum = typeof GetAggregatedResultReportAmountTypeEnum[keyof typeof GetAggregatedResultReportAmountTypeEnum];
/**
 * @export
 */
export declare const GetAggregatedResultReportDirectionEnum: {
    readonly In: "IN";
    readonly Out: "OUT";
};
export type GetAggregatedResultReportDirectionEnum = typeof GetAggregatedResultReportDirectionEnum[keyof typeof GetAggregatedResultReportDirectionEnum];
